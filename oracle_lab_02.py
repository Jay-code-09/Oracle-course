# -*- coding: utf-8 -*-
"""Oracle-Lab-02.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1M-J47F_sYJImeaAmMaWbhZrBw2aalZYT
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import seaborn as sns

data = '/content/mpg.csv'
df = pd.read_csv(data)

df.head()

df.info()

df = df.dropna()

features = ['horsepower','weight','displacement','acceleration','cylinders']
target = 'mpg'

df['horsepower'] = pd.to_numeric(df['horsepower'], errors='coerce')
df = df.dropna(subset=['horsepower'])

correlation_matrix = df[features + [target]].corr()

#plot heatmap of feature importance
plt.figure(figsize = (8,6))
sns.heatmap(correlation_matrix,annot = True, cmap = 'coolwarm',fmt = ".2f")
plt.title('Correlation Heatmap for Feature Imporatance')
plt.show()

X = df[['horsepower','weight','displacement','cylinders']].values
y = df['mpg'].values

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)

model = LinearRegression()

model.fit(X_train, y_train)

y_pred = model.predict(X_test)

mse = mean_squared_error(y_test, y_pred)
print(f"Mean Squared Error: {mse:.2f}")

#plot true vs predicted mpg
plt.figure(figsize=(8,6))
plt.scatter(y_test, y_pred, alpha=0.75, color='blue', label='Predicted vs True')
plt.plot([min(y_test), max(y_test)],[min(y_test), max(y_test)],color='red',linestyle='--',label= 'Ideal Prediction line')

#Calculate and plot prediction errors

for(true_value,predicted_value) in zip(y_test,y_pred):

  plt.plot([true_value, true_value],[true_value,predicted_value],color='gray', linestyle = '-',linewidth = 0.5)

plt.xlabel("True MPG")
plt.ylabel("Predicted MPG")
plt.title("True MPG vs Predicted MPG with Prediction Errors")
plt.legend()
plt.grid(True)
plt.show()

