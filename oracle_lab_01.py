# -*- coding: utf-8 -*-
"""Oracle Lab-01.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1A719YQ9lpbSTUowHQEB4afe0y-oFJOnf
"""

import numpy as np
import matplotlib.pyplot as plt
from ipywidgets import interact, FloatSlider
from IPython.display import display , clear_output

np.random.seed(0)

X = np.linspace(0, 10, 100)
Y = 2 * X + 1 + np.random.normal(0, 2, 100)

def plot_linear_regression( slope = 4.0 , intercept = 3.0) :
    predicted_Y = slope * X + intercept
    loss = np.mean( ( predicted_Y - Y) **2) #Calculate mean squared error (loss)

    #Create the plot
    plt.figure(figsize = (10,5))
    plt.scatter(X,Y, label = ' Data Points')
    plt.plot(X , predicted_Y , color = 'red' , label = 'Linear Regression Line')
    plt.xlabel('X')
    plt.ylabel('Y / Predicted Y')
    plt.title(f'Linear Regression (Loss : {loss:.2f} ) ')
    plt.legend()
    plt.grid(True)
    plt.show()

#Create sliders
slope_slider = FloatSlider(value = 4.0 , min =-5.0 , max = 5.0 , step = 0.1, description =  'Slope')
intercept_slider = FloatSlider(value = 3.0 , min =-5.0 , max = 5.0 , step = 0.1, description =  'Intercept')

#Create an interactive widget
interact(plot_linear_regression(), slope = slope_slider, intercept = intercept_slider)









